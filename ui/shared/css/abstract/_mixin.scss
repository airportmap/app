@use './theme';
@use './vars';

@mixin prevent-select {
    user-select: none;
    -webkit-user-select: none;
}

@mixin prevent-events {
    pointer-events: none;
}

@mixin transparent {
    background: none;
    border: 0;
}

@mixin unstyled-list {
    list-style: none;
    margin: 0;
    padding: 0;
}

@mixin layout-max( $at ) {
    @media ( max-width: vars.getval( 'layout-breakpoint--#{$at}' ) ) {
        @content;
    }
}

@mixin layout-min( $at ) {
    @media ( min-width: vars.getval( 'layout-breakpoint--#{$at}' ) ) {
        @content;
    }
}

@mixin hide-at( $at ) {
    @include layout-max( $at ) {
        display: none !important;
    }
}

@mixin show-at( $at ) {
    @include layout-min( $at ) {
        display: none !important;
    }
}

@mixin before {
    &::before {
        content: '';
        @content;
    }
}

@mixin after {
    &::after {
        content: '';
        @content;
    }
}

@mixin max-width-px( $width, $margin: 0 auto ) {
    margin: #{$margin};
    max-width: #{$width};
}

@mixin max-width( $size, $margin: 0 auto ) {
    @include max-width-px( vars.get( $size ), $margin );
}

@mixin full-sized {
    width: 100%;
    height: 100%;
}

@mixin ratio-width( $width: 100%, $ratio: '1/1' ) {
    aspect-ratio: #{$ratio};
    width: #{$width};
    height: auto;
}

@mixin ratio-height( $height: 100%, $ratio: '1/1' ) {
    aspect-ratio: #{$ratio};
    width: auto;
    height: #{$height};
}

@mixin position( $pos: absolute, $top: unset, $left: unset, $right: unset, $bottom: unset ) {
    position: #{$pos};
    top: #{$top};
    left: #{$left};
    right: #{$right};
    bottom: #{$bottom};
}

@mixin flex-row( $gap: 0, $horiz: flex-start, $vert: center, $nowrap: true ) {
    display: flex;
    flex-flow: row if( $nowrap, nowrap, wrap );
    justify-content: #{$horiz};
    align-items: #{$vert};
    gap: #{$gap};
}

@mixin flex-col( $gap: 0, $horiz: center, $vert: flex-start, $nowrap: true ) {
    display: flex;
    flex-flow: column if( $nowrap, nowrap, wrap );
    justify-content: #{$horiz};
    align-items: #{$vert};
    gap: #{$gap};
}

@mixin flex-center( $gap: 0, $nowrap: true, $inline: false ) {
    display: if( $inline, inline-flex, flex );
    flex-flow: row if( $nowrap, nowrap, wrap );
    justify-content: center;
    align-items: center;
    gap: #{$gap};
}

@mixin font-inherit {
    line-height: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    font-style: inherit;
    color: inherit;
}

@mixin border( $color, $all: 0, $style: 'solid', $top: 0, $left: 0, $right: 0, $bottom: 0 ) {
    border-style: #{$style};
    border-color: theme.get( $color );
    @if $all != 0 {
        border-width: #{$all};
    } @else {
        border-top-width: #{$top};
        border-left-width: #{$left};
        border-right-width: #{$right};
        border-bottom-width: #{$bottom};
    }
}

@mixin outline( $color: 'special', $offset: 0 ) {
    outline: 2px solid theme.get( $color );
    outline-offset: #{$offset};
}

@mixin focused-self( $color: 'special', $offset: 0 ) {
    &:focus, &:active {
        @include outline( $color, $offset );
    }
}

@mixin focused-parent( $color: 'special', $offset: 0 ) {
    &:focus-within {
        @include outline( $color, $offset );
    }
}
