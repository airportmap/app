@use 'sass:color';
@use 'sass:map';
@use '../theme/theme__light' as light;
@use '../theme/theme__dark' as dark;

$themes: (
    light: light.$theme,
    dark: dark.$theme
);

$colors: ();

@each $key, $_ in map.get( $themes, 'light' ) {
    $colors: map.set( $colors, $key, var( --theme-#{$key} ) );
}

@function hex2rgb( $hex ) {
    @return
        color.channel( $hex, 'red', $space: rgb ),
        color.channel( $hex, 'green', $space: rgb ),
        color.channel( $hex, 'blue', $space: rgb );
}

@function get( $color, $alpha: 1, $fb: null, $theme: null ) {
    @if $theme {
        $value: map.get( map.get( $themes, $theme ), $color );
        @if $value { @return rgba( #{$value}, #{$alpha} ); }
        @else if $fb { @return rgba( #{$fb}, #{$alpha} ); }
        @else {
            @warn "Color '#{$color}' is not defined for '#{$theme}' theme";
            @return null;
        }
    } @else {
        $value: map.get( $colors, $color );
        @if $value { @return rgba( #{$value}, #{$alpha} ); }
        @else if $fb { @return rgba( #{$fb}, #{$alpha} ); }
        @else {
            @warn "Color '#{$color}' is not defined";
            @return null;
        }
    }
}

@each $theme, $map in $themes {
    [data-theme="#{$theme}"], .___#{$theme} {
        @each $key, $value in $map {
            --theme-#{$key}: #{ hex2rgb( $value ) };
        }
    }
}
